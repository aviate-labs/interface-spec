type Satoshi = nat64;

type OutPoint = record {
  txid : blob;
  vout : nat32
};

type Utxo = record {
  outpoint: OutPoint;
  value: Satoshi;
  height: nat32;
  confirmations: nat32;
};

type GetUtxosRequest = record {
  address : text;
  min_confirmations: opt nat32;
  offset: opt nat32;
};


type GetUtxosError = variant {
  MalformedAddress;
  // More error types to be added here.
};

type GetBalanceRequest = record {
  address : text;
  min_confirmations: opt nat32;
};

type GetBalanceError = variant {
  MalformedAddress;
  // More error types to be added here.
};

type SendTransactionError = variant {
  MalformedTransaction;
  // More error types to be added here.
};

service bitcoin : {

  get_balance: (GetBalanceRequest) -> (variant {
    Ok : Satoshi;
    Err: opt GetBalanceError;
  });

  get_utxos: (GetUtxosRequest) -> (variant {
    Ok : record {
      utxos: vec Utxo;
      total_count: nat32;
    };
    Err : opt GetUtxosError;
  });

  send_transaction: (raw_transaction: blob) -> (variant {
    Ok : null;
    Err : opt SendTransactionError;
  });
}
